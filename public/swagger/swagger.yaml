swagger: "2.0"
info:
  description: "This is an API for Blog App"
  version: "1.0.0"
  title: "Blog"
host: "blog-api.zizix6host.com"
basePath: "/api/v1/{domain}"
tags:
- name: "blog"
  description: "Everything for blog"
schemes:
- "https"
- "http"
paths:    
  /admin/profile/{user_id}:
    get:
      tags:
      - "Admin/Profile"
      summary: "Get the profile"
      description: "Get the profile of the logged in User"
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful Operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Profile"
        "500":
          description: "An error occured while attempting to perform operation"
                
  /admin/profile/create:
    post:
      tags:
      - "Admin/Profile"
      summary: "Creates a new Profile for User"
      description: ""
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "formData"
        description: "The name of the user"
        required: true
        type: "string"
      - name: "about"
        in: "formData"
        description: "A brief description of the user"
        required: false
        type: "string"
      security:
      - jwt_token: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Profile"
        "402":
          description: "User already exists"
        "500":
          description: "An error occured while attempting to perform operation"
          
  admin/post/save:
    post:
      tags:
      - "Admin/Post"
      summary: "Saves user post"
      description: ""
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "title"
        in: "formData"
        description: "post title"
        required: true
        type: "string"
      - name: "preview"
        in: "formData"
        description: "The preview of your post. Should not be more than 25 words"
        required: true
        type: "string"
      - name: "content"
        in: "formData"
        description: "The post content"
        required: true
        type: "string"
      - name: "cover_photo_id"
        in: "formData"
        description: "The Id of the featured image that was uploaded"
        required: false
        type: "integer"
      - name: "category_id"
        in: "formData"
        description: "The Id of the Category that the post is related to"
        required: false
        type: "integer"
      - name: "tags_id"
        in: "formData"
        description: "The tag ids associated to the post"
        required: false
        type: "string"
      - name: "publish"
        in: "formData"
        description: "Whether to publish the post immediately"
        required: false
        type: "boolean"
      security:
      - jwt_token: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "integer"
        "402":
          description: "Error occured, active status could not be found"
        "500":
          description: "An error occured while attempting to perform operation"

  admin/post/update:
    post:
      tags:
      - "Admin/Post"
      summary: "Updates user post"
      description: ""
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "post_id"
        in: "formData"
        description: "post ID"
        required: true
        type: "string"
      - name: "title"
        in: "formData"
        description: "post title"
        required: false
        type: "string"
      - name: "preview"
        in: "formData"
        description: "The preview of your post. Should not be more than 50 words"
        required: false
        type: "string"
      - name: "content"
        in: "formData"
        description: "The post content"
        required: false
        type: "string"
      - name: "cover_photo_id"
        in: "formData"
        description: "The Id of the featured image that was uploaded"
        required: false
        type: "integer"
      - name: "category_id"
        in: "formData"
        description: "The Id of the Category that the post is related to"
        required: false
        type: "integer"
      - name: "tags_id"
        in: "formData"
        description: "The tag ids associated to the post"
        required: false
        type: "string"
      - name: "publish"
        in: "formData"
        description: "Whether to publish the post immediately"
        required: false
        type: "boolean"
      security:
      - jwt_token: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "integer"
        "402":
          description: "Error occured, active status could not be found"
        "500":
          description: "An error occured while attempting to perform operation"

  admin/post/delete/{post_id}:
    delete:
      tags:
      - "Admin/Post"
      description: "Deletes user post"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "post_id"
        in: "path"
        description: "ID of the post is to be deleted"
        required: true
        type: "integer"
        format: "int64"
      security:
      - jwt_token: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "integer"
        "404":
          description: "Error occured, Post not be found"
        "500":
          description: "An error occured while attempting to perform operation"

  admin/post/toggle_publish/{post_id}:
    get:
      tags:
      - "Admin/Post"
      description: "Toggles post from published to unpublished and vice versa"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "post_id"
        in: "path"
        description: "ID of the post is to be toggled"
        required: true
        type: "integer"
        format: "int64"
      security:
      - jwt_token: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "integer"
        "404":
          description: "Error occured, Post not be found"
        "500":
          description: "An error occured while attempting to perform operation"

  admin/post/toggle_visible/{post_id}:
    get:
      tags:
      - "Admin/Post"
      description: "Toggles post from published to unpublished and vice versa"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "post_id"
        in: "path"
        description: "ID of the post is to be toggled"
        required: true
        type: "integer"
        format: "int64"
      security:
      - jwt_token: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "integer"
        "404":
          description: "Error occured, Post not be found"
        "500":
          description: "An error occured while attempting to perform operation"
          
  admin/post/public:
    get:
      tags:
      - "Admin/Post"
      summary: "View all public posts"
      description: ""
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Post"
        "402":
          description: "User does not exist"
        "500":
          description: "An error occured while attempting to perform operation"

  admin/post/published:
    get:
      tags:
      - "Admin/Post"
      summary: "View all published posts"
      description: ""
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Post"
        "402":
          description: "User does not exist"
        "500":
          description: "An error occured while attempting to perform operation"

  admin/post/unpublished:
    get:
      tags:
      - "Admin/Post"
      summary: "View all unpublished posts"
      description: ""
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Post"
        "402":
          description: "User does not exist"
        "500":
          description: "An error occured while attempting to perform operation"

  admin/post/hidden:
    get:
      tags:
      - "Admin/Post"
      summary: "View all hidden posts"
      description: ""
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Post"
        "402":
          description: "User does not exist"
        "500":
          description: "An error occured while attempting to perform operation"
          
  admin/post/{post_id}:
    get:
      tags:
      - "Admin/Post"
      summary: "View a post"
      description: ""
      produces:
      - "application/json"
      parameters:
      - name: "post_id"
        in: "path"
        description: "ID of the post is to be returned"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Post"
        "404":
          description: "Post does not exist"
        "500":
          description: "An error occured while attempting to perform operation"

  admin/tag/all:
    get:
      tags:
      - "Admin/Tag"
      summary: "View all tags"
      description: ""
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Tag"
        "500":
          description: "An error occured while attempting to perform operation"

  /admin/tag/save:
    post:
      tags:
      - "Admin/Tag"
      summary: "Creates a new Tag"
      description: ""
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "formData"
        description: "The name of the tag"
        required: true
        type: "string"
      security:
      - jwt_token: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Tag"
        "422":
          description: "Validation error"
        "500":
          description: "An error occured while attempting to perform operation"

  /admin/tag/update:
    post:
      tags:
      - "Admin/Tag"
      summary: "Updates a Tag"
      description: ""
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "formData"
        description: "The name of the tag"
        required: true
        type: "string"
      - name: "tag_id"
        in: "formData"
        description: "The id of the tag"
        required: true
        type: "integer"
      security:
      - jwt_token: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Tag"
        "422":
          description: "Validation error"
        "500":
          description: "An error occured while attempting to perform operation"

 /admin/file/save:
    post:
      tags:
      - "Admin/File"
      summary: "Uploads a file/Image"
      description: ""
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "image"
        in: "formData"
        description: "The image to be uploaded"
        required: true
        type: "string"
      security:
      - jwt_token: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/File"
        "422":
          description: "Validation error"
        "500":
          description: "An error occured while attempting to perform operation"
  
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
  jwt_token:
    type: "apiKey"
    name: "Bearer Token"
    in: "header"
definitions:
  Post:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      user:
        $ref: "#/definitions/User"
      title:
        type: "string"
      content:
        type: "string"
      featured_image:
        type: "string"
        description: "The image url"
      tags:
        $ref: "#/definitions/Tag"
      published:
        type: "integer"
      visible:
        type: "integer"
      views_count:
        type: "integer"
      likes:
        $ref: "#/definitions/User"
      dislikes:
        $ref: "#/definitions/User"
        
  User:
    type: "object"
    properties:
      user_id: 
        type: "integer"
        format: "int32"
      email:
        type: "string"
        format: "email"
        example: "abc@gmail.com"
      name:
        type: "string"

  Tag:
    type: "object"
    properties:
      id: 
        type: "integer"
        format: "int32"
      name:
        type: "string"
        
  File:
    type: "object"
    properties:
      id: 
        type: "integer"
        format: "int32"
      user_id: 
        type: "integer"
        format: "int32"
      file_type: 
        type: "string"
      mime_type: 
        type: "string"
      original_file_name: 
        type: "string"
      extension: 
        type: "string"
      size: 
        type: "integer"
      url: 
        type: "string"
      secure_url: 
        type: "string"

  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"